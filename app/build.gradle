apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
final def keystorePropertiesFile = rootProject.file("keystore.properties")

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
        applicationId "de.codebucket.mkkm"

        if (System.getenv("TRAVIS") == "true") {
            versionCode = Integer.valueOf(System.getenv("TRAVIS_BUILD_NUMBER"))
            versionName = System.getenv("MAJOR_MINOR") + "." + System.getenv("TRAVIS_BUILD_NUMBER")
        } else {
            versionCode 1
            versionName "dev"
        }
    }
    
    signingConfigs {
        travis {
            storeFile file("debug.jks")
            storePassword System.getenv("STORE_PASSWORD")
            keyAlias "release"
            keyPassword System.getenv("KEY_PASSWORD")
        }
    }

    // If the keystore file exists
    if (keystorePropertiesFile.exists()) {
        // Initialize a new Properties() object called keystoreProperties.
        final def keystoreProperties = new Properties()

        // Load your keystore.properties file into the keystoreProperties object.
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

        signingConfigs {
            release {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".dev"
        }

        optimized {
            initWith debug
            applicationIdSuffix ".ci"
            versionNameSuffix "-ci-" + System.getenv("DRONE_BRANCH")

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (System.getenv("TRAVIS") == "true") {
                if (System.getenv("TRAVIS_EVENT_TYPE") != "pull_request") {
                    signingConfig signingConfigs.travis
                }
            }
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            if (keystorePropertiesFile.exists()) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    def supportLibVersion = '28.0.0-rc01'
    implementation "com.android.support:support-v4:${supportLibVersion}"
    implementation "com.android.support:design:${supportLibVersion}"
    implementation "com.android.support.constraint:constraint-layout:1.1.3"
    implementation "com.android.support:appcompat-v7:${supportLibVersion}"
    implementation "com.android.support:customtabs:${supportLibVersion}"
}